#include <iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<algorithm>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
#define lowbit(x) x&(-x);
#define me(a,b) memset(a,-1,sizeof(a));
typedef long long ll;
using namespace std;
const int maxn=1e4+10;
int d[20];
ll dp[20][20][maxn]; 
ll DFS(ll pos,int pivot,ll sum,bool isLimit){
	if(pos==-1)
		return sum==0?1:0;
	if(!isLimit&&dp[pos][pivot][sum]!=-1)
		return dp[pos][pivot][sum];
	int up=isLimit?d[pos]:9;
	ll ans=0;
	for(int i=0;i<=up;i++)
		ans+=DFS(pos-1,pivot,sum+(pos-pivot)*i,isLimit&&i==d[pos]);
	if(!isLimit)
		dp[pos][pivot][sum]=ans;
	return ans;
}
long long Solve(long long k){
	long long len=0,ans=0;
	while(k!=0){
		d[len++]=k%10;
		k/=10;
	}
	for(int i=0;i<len;i++)
		ans+=DFS(len-1,i,0,true);
	return ans-len+1;
}
int main() {
	long long n,m,T;
	scanf("%lld",&T);
	while(T--){
		me(dp,-1);
		scanf("%lld%lld",&m,&n);
		printf("%lld\n",Solve(n)-Solve(m-1));
	} 
	return 0;
}
/*
2
0 9
7604 24324
*/