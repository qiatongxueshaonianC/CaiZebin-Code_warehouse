#include <iostream>
#include<cstring>
#include<cstdio>
#include<algorithm>
#include<map>
#include<queue>
#include<set>
#include<cmath>
#include<stack>
#include<string>
const int maxn=1e4+10;
const int mod=998244353;
const int inf=1e8;
#define me(a,b) memset(a,b,sizeof(a))
#define lowbit(x) x&(-x)
typedef long long ll;
using namespace std;
int d[20];
ll dp[20][20][maxn];
int DFS(int pos,int pivot,int sum,bool isLimit){
	if(pos==0)
		return sum==0?1:0;
	if(!isLimit&&dp[pos][pivot][sum]!=-1)
		return dp[pos][pivot][sum];
	int up=isLimit?d[pos]:9;
	int ans=0;
	for(int i=0;i<=up;i++)
		ans+=DFS(pos-1,pivot,sum+(pos-pivot)*i,isLimit&&i==d[pos]);
	if(!isLimit)
		dp[pos][pivot][sum]=ans;
	return ans;
}
ll solve(ll n)
{
    ll ans=0,len=0;
    while(n)
    {
        d[++len]=n%10;
        n/=10;
    }
    for(int i=1;i<=len;i++)
        ans+=DFS(len,i,0,1);
    return ans-len+1;///这里要减去0,00,000……的情况
}
int main()
{
 
    int t;
    scanf("%d",&t);
    me(dp,-1);
    while(t--)
    {
        ll n,m;
        scanf("%lld%lld",&m,&n);
        printf("%lld\n",solve(n)-solve(m-1));
    }
    return 0;
}

/*
2
7604 24324
0 9

1
0 60
*/