#include <iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<sstream>
#include<algorithm>
#include<cmath>
#include<climits>
#include<numeric>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<iterator>
using namespace std;
const int maxn=1000000+5;
const int MOD=1e9+7;
const int P=1e7+19;
typedef long long LL;
LL powP[maxn];
struct Shash{
	string s;
	LL H[maxn],s_val;
	void calH(){
		H[0]=s[0];
		for(int i=1;i<s.size();i++){
			H[i]=(H[i-1]*P+s[i])%MOD;
		}
		s_val=H[s.size()-1];
	}
	LL calsubH(int i,int j){
		if(i==0)
			return H[j];
		return ((H[j]-H[i-1]*powP[j-i+1])%MOD+MOD)%MOD;
	}
};
void init(int n){
	powP[0]=1;
	for(int i=1;i<=n;i++)
		powP[i]=(powP[i-1]*P)%MOD;
}
Shash p,txt;
int main() {
	std::ios::sync_with_stdio(false);
	int t;
	cin>>t;
	while(t--){
		int ans=0;
		cin>>p.s>>txt.s;
		init(txt.s.size());
		p.calH();
		txt.calH();
		int len=p.s.size();
		int N=txt.s.size();
		for(int i=0;i+len-1<N;i++){
			LL sub=txt.calsubH(i,i+len-1);
			if(sub==p.s_val)
				ans++;
		}
		cout<<ans<<endl;
	}
	return 0;
}
/*
3
BAPC
BAPC
AZA
AZAZAZA
VERDI
AVERDXIVYERDIAN
*/