#include<bits/stdc++.h>
using namespace std;
struct Node{
	int x,y;
	Node(int a,int b):x(a),y(b){}
};
int n,step;
vector<Node> stone;
bool flag;
vector<pair<int,int> >XY={{0,0},{0,1},{0,-1},{1,0},{1,1},{1,-1},{-1,0},{-1,1},{-1,-1}};
bool judge(int x,int y){
	if(x<0||x>=8||y<0||y>=8) return false;
	for(auto i:stone){
		if(x==i.x&&y==i.y) return false;
	}
	return true;
}
void DFS(int x,int y,int step){
	if(step>=8){
		flag=true;
		return;
	}
	for(auto i:stone){
		if(flag==true) return;
		if(x==i.x&&y==i.y) return;
	}
	for(int i=0;i<9;i++){
		if(flag==true) return;
		int newx=x+XY[i].first;
		int newy=y+XY[i].second;
		if(judge(newx,newy)){
			for(auto&i:stone)
				i.x++;
			DFS(newx,newy,step+1);
			for(auto&i:stone)
				i.x--;
		}
	}
	return; 
}
int main() {
	scanf("%d%*c",&n);
	int pos,k;
	for(int t=1;t<=n;t++){
		for(int i=0;i<8;i++){
			pos=k=0;
			string s1;
			cin>>s1;
			while(1){
				pos=s1.find('S',k);
				if(pos==string::npos) break;
				Node node(i,pos);
				stone.push_back(node);
				k=pos+1;
			}
		}
		DFS(7,0,0);
		if(flag==true){
			cout<<"Case #"<<t<<": "<<"Yes"<<endl;
		}else cout<<"Case #"<<t<<": "<<"No"<<endl;
		stone.clear();
		flag=false;
	}
	return 0;
}
/*
5
.......A
........
........
........
........
........
........
U.......

.......A
........
........
........
........
.S......
S.......
US......

.......A
........
........
........
........
........
SS......
US......

.......A
........
........
........
........
.S......
S.......
U.......

.......A
........
........
........
........
.S......
S.......
U.S.....
*/